{"ast":null,"code":"var _jsxFileName = \"D:\\\\anubhav-meet\\\\client\\\\src\\\\components\\\\VideoCall.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCall = () => {\n  _s();\n  const [screenSharing, setScreenSharing] = useState(false);\n  const userVideo = useRef();\n  const screenVideo = useRef();\n  const socketRef = useRef();\n  useEffect(() => {\n    // 1. Connect to WebSocket server\n    socketRef.current = new WebSocket('ws://localhost:5000');\n\n    // 2. Get user camera and microphone\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n    });\n    return () => {\n      socketRef.current.close();\n    };\n  }, []);\n\n  // 3. Screen sharing function\n  const shareScreen = async () => {\n    try {\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      screenVideo.current.srcObject = screenStream;\n      setScreenSharing(true);\n\n      // 4. Show screen sharing until stopped\n      screenStream.getVideoTracks()[0].onended = () => {\n        setScreenSharing(false);\n      };\n    } catch (err) {\n      console.error(\"Screen sharing failed:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-video\",\n      children: screenSharing ? /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: screenVideo,\n        autoPlay: true,\n        muted: true,\n        className: \"screen-share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: userVideo,\n        autoPlay: true,\n        muted: true,\n        className: \"user-video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), screenSharing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pip-view\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: userVideo,\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shareScreen,\n        className: \"share-btn\",\n        children: screenSharing ? 'Stop Sharing' : 'Share Screen'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCall, \"G/cSN1KMwfvaQPKGABl7Cl0kkgI=\");\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Peer","jsxDEV","_jsxDEV","VideoCall","_s","screenSharing","setScreenSharing","userVideo","screenVideo","socketRef","current","WebSocket","navigator","mediaDevices","getUserMedia","video","audio","then","stream","srcObject","close","shareScreen","screenStream","getDisplayMedia","getVideoTracks","onended","err","console","error","className","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/anubhav-meet/client/src/components/VideoCall.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Peer from 'simple-peer';\r\n\r\nconst VideoCall = () => {\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n  const userVideo = useRef();\r\n  const screenVideo = useRef();\r\n  const socketRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // 1. Connect to WebSocket server\r\n    socketRef.current = new WebSocket('ws://localhost:5000');\r\n\r\n    // 2. Get user camera and microphone\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then(stream => {\r\n        userVideo.current.srcObject = stream;\r\n      });\r\n\r\n    return () => {\r\n      socketRef.current.close();\r\n    };\r\n  }, []);\r\n\r\n  // 3. Screen sharing function\r\n  const shareScreen = async () => {\r\n    try {\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n      screenVideo.current.srcObject = screenStream;\r\n      setScreenSharing(true);\r\n\r\n      // 4. Show screen sharing until stopped\r\n      screenStream.getVideoTracks()[0].onended = () => {\r\n        setScreenSharing(false);\r\n      };\r\n    } catch (err) {\r\n      console.error(\"Screen sharing failed:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Main video container */}\r\n      <div className=\"main-video\">\r\n        {screenSharing ? (\r\n          <video ref={screenVideo} autoPlay muted className=\"screen-share\" />\r\n        ) : (\r\n          <video ref={userVideo} autoPlay muted className=\"user-video\" />\r\n        )}\r\n      </div>\r\n\r\n      {/* Self-view PIP */}\r\n      {screenSharing && (\r\n        <div className=\"pip-view\">\r\n          <video ref={userVideo} autoPlay muted />\r\n        </div>\r\n      )}\r\n\r\n      {/* Controls */}\r\n      <div className=\"controls\">\r\n        <button onClick={shareScreen} className=\"share-btn\">\r\n          {screenSharing ? 'Stop Sharing' : 'Share Screen'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}