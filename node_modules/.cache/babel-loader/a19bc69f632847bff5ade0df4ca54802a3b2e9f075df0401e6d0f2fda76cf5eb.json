{"ast":null,"code":"var _jsxFileName = \"D:\\\\anubhav-meet\\\\client\\\\src\\\\components\\\\VideoCall.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCall = () => {\n  _s();\n  const [screenSharing, setScreenSharing] = useState(false);\n  const userVideo = useRef();\n  const screenVideo = useRef();\n  useEffect(() => {\n    // Get user camera and microphone\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n    }).catch(err => {\n      console.error('Error accessing camera/microphone:', err);\n    });\n  }, []);\n  const shareScreen = async () => {\n    try {\n      // Get screen sharing stream\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      screenVideo.current.srcObject = screenStream;\n      setScreenSharing(true);\n\n      // Handle screen sharing stop\n      screenStream.getVideoTracks()[0].onended = () => {\n        setScreenSharing(false);\n      };\n    } catch (error) {\n      console.error('Error sharing screen:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-call-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [screenSharing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"screen-share\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: screenVideo,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-video\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: userVideo,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), screenSharing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-video-small\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: userVideo,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"share-screen-btn\",\n        onClick: shareScreen,\n        children: screenSharing ? 'Stop Sharing' : 'Share Screen'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCall, \"8bHzce3XcrpRRpr7EX6Nbi9P784=\");\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","VideoCall","_s","screenSharing","setScreenSharing","userVideo","screenVideo","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","catch","err","console","error","shareScreen","screenStream","getDisplayMedia","getVideoTracks","onended","className","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/anubhav-meet/client/src/components/VideoCall.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst VideoCall = () => {\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n  const userVideo = useRef();\r\n  const screenVideo = useRef();\r\n\r\n  useEffect(() => {\r\n    // Get user camera and microphone\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then(stream => {\r\n        userVideo.current.srcObject = stream;\r\n      })\r\n      .catch(err => {\r\n        console.error('Error accessing camera/microphone:', err);\r\n      });\r\n  }, []);\r\n\r\n  const shareScreen = async () => {\r\n    try {\r\n      // Get screen sharing stream\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n      screenVideo.current.srcObject = screenStream;\r\n      setScreenSharing(true);\r\n\r\n      // Handle screen sharing stop\r\n      screenStream.getVideoTracks()[0].onended = () => {\r\n        setScreenSharing(false);\r\n      };\r\n    } catch (error) {\r\n      console.error('Error sharing screen:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"video-call-container\">\r\n      <div className=\"video-grid\">\r\n        {/* Main video feed */}\r\n        {screenSharing ? (\r\n          <div className=\"screen-share\">\r\n            <video ref={screenVideo} autoPlay muted />\r\n          </div>\r\n        ) : (\r\n          <div className=\"user-video\">\r\n            <video ref={userVideo} autoPlay muted />\r\n          </div>\r\n        )}\r\n\r\n        {/* Small self-view when screen sharing */}\r\n        {screenSharing && (\r\n          <div className=\"user-video-small\">\r\n            <video ref={userVideo} autoPlay muted />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Controls */}\r\n      <div className=\"controls\">\r\n        <button className=\"share-screen-btn\" onClick={shareScreen}>\r\n          {screenSharing ? 'Stop Sharing' : 'Share Screen'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}