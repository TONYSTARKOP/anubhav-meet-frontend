{"ast":null,"code":"var _jsxFileName = \"D:\\\\anubhav-meet\\\\client\\\\src\\\\components\\\\VideoCall.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shareScreen = () => {\n  navigator.mediaDevices.getDisplayMedia({\n    video: true\n  }).then(stream => {\n    const video = document.createElement('video');\n    video.srcObject = stream;\n    video.play();\n    document.body.appendChild(video);\n  });\n};\n/*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: shareScreen,\n  children: \"Share Screen\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\nconst VideoCall = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    // Initialize socket connection\n    socketRef.current = new WebSocket('ws://localhost:5000');\n\n    // Get user media (video and audio)\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n\n      // Handle incoming calls\n      socketRef.current.onmessage = message => {\n        const signal = JSON.parse(message.data);\n        const peer = new Peer({\n          initiator: false,\n          stream,\n          trickle: false\n        });\n        peer.on('signal', data => {\n          socketRef.current.send(JSON.stringify(data));\n        });\n        peer.signal(signal);\n        peersRef.current.push(peer);\n        setPeers([...peersRef.current]);\n      };\n    });\n\n    // Cleanup\n    return () => {\n      socketRef.current.close();\n      peersRef.current.forEach(peer => peer.destroy());\n    };\n  }, []);\n  const callUser = () => {\n    // Create a new peer connection\n    const peer = new Peer({\n      initiator: true,\n      trickle: false\n    });\n    peer.on('signal', data => {\n      socketRef.current.send(JSON.stringify(data));\n    });\n    peer.on('stream', stream => {\n      const video = document.createElement('video');\n      video.srcObject = stream;\n      video.play();\n      document.body.appendChild(video);\n    });\n    peersRef.current.push(peer);\n    setPeers([...peersRef.current]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Video Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: userVideo,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: callUser,\n      children: \"Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCall, \"0NX/RV0iWFB/+cQYuOeIOVNE514=\");\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Peer","jsxDEV","_jsxDEV","shareScreen","navigator","mediaDevices","getDisplayMedia","video","then","stream","document","createElement","srcObject","play","body","appendChild","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","VideoCall","_s","peers","setPeers","userVideo","peersRef","socketRef","current","WebSocket","getUserMedia","audio","onmessage","message","signal","JSON","parse","data","peer","initiator","trickle","on","send","stringify","push","close","forEach","destroy","callUser","ref","autoPlay","muted","_c","$RefreshReg$"],"sources":["D:/anubhav-meet/client/src/components/VideoCall.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Peer from 'simple-peer';\r\nconst shareScreen = () => {\r\n    navigator.mediaDevices.getDisplayMedia({ video: true }).then(stream => {\r\n      const video = document.createElement('video');\r\n      video.srcObject = stream;\r\n      video.play();\r\n      document.body.appendChild(video);\r\n    });\r\n  };\r\n  <button onClick={shareScreen}>Share Screen</button>\r\nconst VideoCall = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const socketRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Initialize socket connection\r\n    socketRef.current = new WebSocket('ws://localhost:5000');\r\n\r\n    // Get user media (video and audio)\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n      userVideo.current.srcObject = stream;\r\n\r\n      // Handle incoming calls\r\n      socketRef.current.onmessage = (message) => {\r\n        const signal = JSON.parse(message.data);\r\n        const peer = new Peer({ initiator: false, stream, trickle: false });\r\n\r\n        peer.on('signal', (data) => {\r\n          socketRef.current.send(JSON.stringify(data));\r\n        });\r\n\r\n        peer.signal(signal);\r\n        peersRef.current.push(peer);\r\n        setPeers([...peersRef.current]);\r\n      };\r\n    });\r\n\r\n    // Cleanup\r\n    return () => {\r\n      socketRef.current.close();\r\n      peersRef.current.forEach(peer => peer.destroy());\r\n    };\r\n  }, []);\r\n\r\n  const callUser = () => {\r\n    // Create a new peer connection\r\n    const peer = new Peer({ initiator: true, trickle: false });\r\n\r\n    peer.on('signal', (data) => {\r\n      socketRef.current.send(JSON.stringify(data));\r\n    });\r\n\r\n    peer.on('stream', (stream) => {\r\n      const video = document.createElement('video');\r\n      video.srcObject = stream;\r\n      video.play();\r\n      document.body.appendChild(video);\r\n    });\r\n\r\n    peersRef.current.push(peer);\r\n    setPeers([...peersRef.current]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Video Call</h2>\r\n      <video ref={userVideo} autoPlay muted />\r\n      <button onClick={callUser}>Call</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}