{"ast":null,"code":"var _jsxFileName = \"D:\\\\anubhav-meet\\\\client\\\\src\\\\components\\\\VideoCall.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCall = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const userVideo = useRef();\n  const screenVideo = useRef();\n  const peersRef = useRef([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    // Initialize WebSocket connection\n    socketRef.current = new WebSocket('ws://localhost:5000');\n\n    // Get user media (camera + microphone)\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n\n      // Handle incoming signals\n      socketRef.current.onmessage = message => {\n        const signal = JSON.parse(message.data);\n        const peer = new Peer({\n          initiator: false,\n          stream,\n          trickle: false\n        });\n        peer.on('signal', data => {\n          socketRef.current.send(JSON.stringify(data));\n        });\n        peer.on('stream', remoteStream => {\n          const video = document.createElement('video');\n          video.srcObject = remoteStream;\n          video.autoplay = true;\n          document.body.appendChild(video);\n          setPeers(prev => [...prev, {\n            id: prev.length,\n            stream: remoteStream\n          }]);\n        });\n        peer.signal(signal);\n        peersRef.current.push(peer);\n      };\n    });\n    return () => {\n      socketRef.current.close();\n      peersRef.current.forEach(peer => peer.destroy());\n    };\n  }, []);\n\n  // Share screen functionality\n  const shareScreen = async () => {\n    try {\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      screenVideo.current.srcObject = screenStream;\n      setScreenSharing(true);\n\n      // Replace camera track with screen track for all peers\n      peersRef.current.forEach(peer => {\n        const screenTrack = screenStream.getVideoTracks()[0];\n        peer.replaceTrack(peer.streams[0].getVideoTracks()[0], screenTrack, peer.streams[0]);\n      });\n\n      // Handle screen sharing stop\n      screenStream.getVideoTracks()[0].onended = () => {\n        setScreenSharing(false);\n        userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n      };\n    } catch (err) {\n      console.error(\"Screen sharing failed:\", err);\n    }\n  };\n\n  // Clean UI layout\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-view\",\n      children: screenSharing ? /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: screenVideo,\n        autoPlay: true,\n        muted: true,\n        className: \"screen-share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: userVideo,\n        autoPlay: true,\n        muted: true,\n        className: \"user-video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), screenSharing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"self-view\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: userVideo,\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"peer-grid\",\n      children: peers.map((peer, index) => /*#__PURE__*/_jsxDEV(\"video\", {\n        srcObject: peer.stream,\n        autoPlay: true\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shareScreen,\n        className: \"share-btn\",\n        children: screenSharing ? 'Stop Sharing' : 'Share Screen'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"leave-btn\",\n        children: \"Leave Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCall, \"VKaIJOq8/zLOiaUk0GzWCHPZ30M=\");\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Peer","jsxDEV","_jsxDEV","VideoCall","_s","peers","setPeers","screenSharing","setScreenSharing","userVideo","screenVideo","peersRef","socketRef","current","WebSocket","navigator","mediaDevices","getUserMedia","video","audio","then","stream","srcObject","onmessage","message","signal","JSON","parse","data","peer","initiator","trickle","on","send","stringify","remoteStream","document","createElement","autoplay","body","appendChild","prev","id","length","push","close","forEach","destroy","shareScreen","screenStream","getDisplayMedia","screenTrack","getVideoTracks","replaceTrack","streams","onended","enabled","err","console","error","className","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["D:/anubhav-meet/client/src/components/VideoCall.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Peer from 'simple-peer';\r\n\r\nconst VideoCall = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n  const userVideo = useRef();\r\n  const screenVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const socketRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Initialize WebSocket connection\r\n    socketRef.current = new WebSocket('ws://localhost:5000');\r\n\r\n    // Get user media (camera + microphone)\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then(stream => {\r\n        userVideo.current.srcObject = stream;\r\n\r\n        // Handle incoming signals\r\n        socketRef.current.onmessage = (message) => {\r\n          const signal = JSON.parse(message.data);\r\n          const peer = new Peer({ initiator: false, stream, trickle: false });\r\n\r\n          peer.on('signal', data => {\r\n            socketRef.current.send(JSON.stringify(data));\r\n          });\r\n\r\n          peer.on('stream', remoteStream => {\r\n            const video = document.createElement('video');\r\n            video.srcObject = remoteStream;\r\n            video.autoplay = true;\r\n            document.body.appendChild(video);\r\n            setPeers(prev => [...prev, { id: prev.length, stream: remoteStream }]);\r\n          });\r\n\r\n          peer.signal(signal);\r\n          peersRef.current.push(peer);\r\n        };\r\n      });\r\n\r\n    return () => {\r\n      socketRef.current.close();\r\n      peersRef.current.forEach(peer => peer.destroy());\r\n    };\r\n  }, []);\r\n\r\n  // Share screen functionality\r\n  const shareScreen = async () => {\r\n    try {\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n      screenVideo.current.srcObject = screenStream;\r\n      setScreenSharing(true);\r\n\r\n      // Replace camera track with screen track for all peers\r\n      peersRef.current.forEach(peer => {\r\n        const screenTrack = screenStream.getVideoTracks()[0];\r\n        peer.replaceTrack(\r\n          peer.streams[0].getVideoTracks()[0],\r\n          screenTrack,\r\n          peer.streams[0]\r\n        );\r\n      });\r\n\r\n      // Handle screen sharing stop\r\n      screenStream.getVideoTracks()[0].onended = () => {\r\n        setScreenSharing(false);\r\n        userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\r\n      };\r\n    } catch (err) {\r\n      console.error(\"Screen sharing failed:\", err);\r\n    }\r\n  };\r\n\r\n  // Clean UI layout\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Main screen share/camera view */}\r\n      <div className=\"main-view\">\r\n        {screenSharing ? (\r\n          <video ref={screenVideo} autoPlay muted className=\"screen-share\" />\r\n        ) : (\r\n          <video ref={userVideo} autoPlay muted className=\"user-video\" />\r\n        )}\r\n      </div>\r\n\r\n      {/* Small self-view when screen sharing */}\r\n      {screenSharing && (\r\n        <div className=\"self-view\">\r\n          <video ref={userVideo} autoPlay muted />\r\n        </div>\r\n      )}\r\n\r\n      {/* Peer videos */}\r\n      <div className=\"peer-grid\">\r\n        {peers.map((peer, index) => (\r\n          <video key={index} srcObject={peer.stream} autoPlay />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Control buttons */}\r\n      <div className=\"controls\">\r\n        <button onClick={shareScreen} className=\"share-btn\">\r\n          {screenSharing ? 'Stop Sharing' : 'Share Screen'}\r\n        </button>\r\n        <button onClick={() => window.location.reload()} className=\"leave-btn\">\r\n          Leave Call\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}