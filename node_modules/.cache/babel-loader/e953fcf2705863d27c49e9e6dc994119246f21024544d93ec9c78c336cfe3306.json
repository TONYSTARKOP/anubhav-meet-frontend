{"ast":null,"code":"var _jsxFileName = \"D:\\\\anubhav-meet\\\\client\\\\src\\\\components\\\\VideoCall.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCall = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const userVideo = useRef();\n  const screenVideo = useRef();\n  const peersRef = useRef([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = new WebSocket('ws://localhost:5000');\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n      socketRef.current.onmessage = message => {\n        const signal = JSON.parse(message.data);\n        const peer = new Peer({\n          initiator: false,\n          stream,\n          trickle: false\n        });\n        peer.on('signal', data => {\n          socketRef.current.send(JSON.stringify(data));\n        });\n        peer.on('stream', stream => {\n          const video = document.createElement('video');\n          video.srcObject = stream;\n          video.play();\n          document.body.appendChild(video);\n          setPeers([...peersRef.current, {\n            id: peersRef.current.length,\n            stream\n          }]);\n        });\n        peer.signal(signal);\n        peersRef.current.push(peer);\n      };\n    });\n    return () => {\n      socketRef.current.close();\n      peersRef.current.forEach(peer => peer.destroy());\n    };\n  }, []);\n  const callUser = () => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false\n    });\n    peer.on('signal', data => {\n      socketRef.current.send(JSON.stringify(data));\n    });\n    peer.on('stream', stream => {\n      const video = document.createElement('video');\n      video.srcObject = stream;\n      video.play();\n      document.body.appendChild(video);\n      setPeers([...peersRef.current, {\n        id: peersRef.current.length,\n        stream\n      }]);\n    });\n    peersRef.current.push(peer);\n  };\n  const shareScreen = async () => {\n    try {\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      screenVideo.current.srcObject = screenStream;\n      setScreenSharing(true);\n      peersRef.current.forEach(peer => {\n        const screenTrack = screenStream.getVideoTracks()[0];\n        const sender = peer._pc.getSenders().find(s => s.track.kind === 'video');\n        sender.replaceTrack(screenTrack);\n      });\n      screenStream.getVideoTracks()[0].onended = () => {\n        setScreenSharing(false);\n        userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n      };\n    } catch (error) {\n      console.error('Error sharing screen:', error);\n    }\n  };\n  const leaveCall = () => {\n    peersRef.current.forEach(peer => peer.destroy());\n    setPeers([]);\n    setScreenSharing(false);\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-call-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [screenSharing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"screen-share\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: screenVideo,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-video\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: userVideo,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), peers.map((peer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"peer-video\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          srcObject: peer.stream,\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)), screenSharing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-video-small\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: userVideo,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"share-screen-btn\",\n        onClick: shareScreen,\n        children: screenSharing ? 'Stop Sharing' : 'Share Screen'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"leave-call-btn\",\n        onClick: leaveCall,\n        children: \"Leave Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCall, \"VKaIJOq8/zLOiaUk0GzWCHPZ30M=\");\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Peer","jsxDEV","_jsxDEV","VideoCall","_s","peers","setPeers","screenSharing","setScreenSharing","userVideo","screenVideo","peersRef","socketRef","current","WebSocket","navigator","mediaDevices","getUserMedia","video","audio","then","stream","srcObject","onmessage","message","signal","JSON","parse","data","peer","initiator","trickle","on","send","stringify","document","createElement","play","body","appendChild","id","length","push","close","forEach","destroy","callUser","shareScreen","screenStream","getDisplayMedia","screenTrack","getVideoTracks","sender","_pc","getSenders","find","s","track","kind","replaceTrack","onended","enabled","error","console","leaveCall","window","location","reload","className","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["D:/anubhav-meet/client/src/components/VideoCall.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Peer from 'simple-peer';\r\n\r\nconst VideoCall = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n  const userVideo = useRef();\r\n  const screenVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const socketRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socketRef.current = new WebSocket('ws://localhost:5000');\r\n\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n      userVideo.current.srcObject = stream;\r\n\r\n      socketRef.current.onmessage = (message) => {\r\n        const signal = JSON.parse(message.data);\r\n        const peer = new Peer({ initiator: false, stream, trickle: false });\r\n\r\n        peer.on('signal', (data) => {\r\n          socketRef.current.send(JSON.stringify(data));\r\n        });\r\n\r\n        peer.on('stream', (stream) => {\r\n          const video = document.createElement('video');\r\n          video.srcObject = stream;\r\n          video.play();\r\n          document.body.appendChild(video);\r\n          setPeers([...peersRef.current, { id: peersRef.current.length, stream }]);\r\n        });\r\n\r\n        peer.signal(signal);\r\n        peersRef.current.push(peer);\r\n      };\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.close();\r\n      peersRef.current.forEach(peer => peer.destroy());\r\n    };\r\n  }, []);\r\n\r\n  const callUser = () => {\r\n    const peer = new Peer({ initiator: true, trickle: false });\r\n\r\n    peer.on('signal', (data) => {\r\n      socketRef.current.send(JSON.stringify(data));\r\n    });\r\n\r\n    peer.on('stream', (stream) => {\r\n      const video = document.createElement('video');\r\n      video.srcObject = stream;\r\n      video.play();\r\n      document.body.appendChild(video);\r\n      setPeers([...peersRef.current, { id: peersRef.current.length, stream }]);\r\n    });\r\n\r\n    peersRef.current.push(peer);\r\n  };\r\n\r\n  const shareScreen = async () => {\r\n    try {\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n      screenVideo.current.srcObject = screenStream;\r\n      setScreenSharing(true);\r\n\r\n      peersRef.current.forEach(peer => {\r\n        const screenTrack = screenStream.getVideoTracks()[0];\r\n        const sender = peer._pc.getSenders().find(s => s.track.kind === 'video');\r\n        sender.replaceTrack(screenTrack);\r\n      });\r\n\r\n      screenStream.getVideoTracks()[0].onended = () => {\r\n        setScreenSharing(false);\r\n        userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\r\n      };\r\n    } catch (error) {\r\n      console.error('Error sharing screen:', error);\r\n    }\r\n  };\r\n\r\n  const leaveCall = () => {\r\n    peersRef.current.forEach(peer => peer.destroy());\r\n    setPeers([]);\r\n    setScreenSharing(false);\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"video-call-container\">\r\n      <div className=\"video-grid\">\r\n        {screenSharing ? (\r\n          <div className=\"screen-share\">\r\n            <video ref={screenVideo} autoPlay muted />\r\n          </div>\r\n        ) : (\r\n          <div className=\"user-video\">\r\n            <video ref={userVideo} autoPlay muted />\r\n          </div>\r\n        )}\r\n        {peers.map((peer, index) => (\r\n          <div key={index} className=\"peer-video\">\r\n            <video srcObject={peer.stream} autoPlay />\r\n          </div>\r\n        ))}\r\n        {screenSharing && (\r\n          <div className=\"user-video-small\">\r\n            <video ref={userVideo} autoPlay muted />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"controls\">\r\n        <button className=\"share-screen-btn\" onClick={shareScreen}>\r\n          {screenSharing ? 'Stop Sharing' : 'Share Screen'}\r\n        </button>\r\n        <button className=\"leave-call-btn\" onClick={leaveCall}>Leave Call</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}